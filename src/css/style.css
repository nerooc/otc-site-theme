@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600);
#slider {
  position: relative;
  overflow: hidden;
  z-index: 0; }
  #slider a.control_prev,
  #slider a.control_next {
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    z-index: 999;
    display: block;
    padding: 4% 3%;
    width: auto;
    height: auto;
    color: #fff;
    text-decoration: none;
    font-weight: 600;
    font-size: 18px;
    opacity: 0.8;
    cursor: pointer; }
  #slider a.control_prev:hover,
  #slider a.control_next:hover {
    -webkit-transition: all 0.2s ease; }
  #slider a.control_prev {
    border-radius: 0 2px 2px 0; }
  #slider a.control_next {
    right: 0;
    border-radius: 2px 0 0 2px; }
  #slider ul {
    position: relative;
    margin: 0;
    padding: 0;
    height: 400px;
    list-style: none; }
    #slider ul li {
      position: relative;
      display: block;
      float: left;
      margin: 0;
      padding: 0;
      width: 100vw;
      height: 650px;
      background: #ccc; }
      #slider ul li .sliderContainer {
        margin-top: 30px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        width: 661px;
        /* to change */
        position: relative;
        top: 50%;
        transform: translate(0, -40%);
        left: 25%;
        color: white; }
        #slider ul li .sliderContainer .sliderTitle {
          text-transform: uppercase;
          font-size: 40px;
          font-family: 'Montserrat', sans-serif;
          font-weight: 600; }
        #slider ul li .sliderContainer .sliderText {
          margin: 40px 0;
          font-size: 18px;
          font-weight: 500;
          line-height: 35px;
          font-family: 'Montserrat', sans-serif; }

header {
  display: flex;
  margin-top: 32px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  align-items: center;
  z-index: 1; }
  header #rect {
    height: 62px;
    width: 20%;
    background-color: #AB0039;
    box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.2); }
  header .logo {
    margin: 0 14px 0 25px;
    cursor: pointer; }
  header #rect2 {
    display: flex;
    align-items: center;
    background-color: #AB0039;
    height: 62px;
    width: 100%;
    box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.2); }
    header #rect2 a {
      font-size: 13px;
      font-weight: 600;
      display: flex;
      height: 62px;
      padding: 0 1vw 0 1vw;
      justify-content: center;
      align-items: center;
      background-color: #AB0039;
      cursor: pointer;
      text-decoration: none;
      color: white;
      font-family: 'Montserrat'; }
      @media screen and (min-width: 1000px) and (max-width: 1690px) {
        header #rect2 a {
          padding: 0 1vw 0 1vw; } }
    header #rect2 a:hover {
      background-image: linear-gradient(#AB0039, #6F1529); }

@media screen and (min-width: 500px) {
  #nav_links {
    background-color: #AB0039;
    margin-left: 22%;
    margin-right: 22%;
    align-items: center;
    width: 100%;
    display: flex;
    justify-content: space-between;
    list-style: none;
    flex-wrap: wrap; }
    #nav_links a {
      font-weight: 600;
      display: flex;
      height: 62px;
      padding: 0 3vw 0 3vw;
      justify-content: center;
      align-items: center;
      background-color: yellow;
      flex-grow: 1;
      cursor: pointer;
      text-decoration: none;
      color: white;
      font-family: 'Montserrat'; } }

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

a {
  text-decoration: none; }

.sectionTitle {
  font-family: 'Montserrat', sans-serif;
  font-weight: 600;
  color: #3d3d3d;
  font-size: 34px;
  text-align: center; }

.baseButton {
  color: white;
  font-family: 'Montserrat', sans-serif;
  border-radius: 20px;
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;
  background-image: linear-gradient(#AB0039 1.9%, #6F1529 320.86%);
  width: 222px;
  height: 40px;
  border: none;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer; }

.baseButton:focus {
  outline: none; }

.baseButton:hover {
  background-image: linear-gradient(#AB0039, #6F1529); }

#b2t {
  opacity: 0;
  transition: 0.2s;
  position: fixed;
  height: 60px;
  width: 60px;
  bottom: 50px;
  right: 50px;
  z-index: 99;
  cursor: pointer; }

#whoWeAre {
  padding: 60px 0 60px 0; }
  #whoWeAre #aboutus {
    width: 805px;
    margin: 30px auto;
    line-height: 30px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
    color: #7D7D7D;
    font-size: 15px;
    text-align: justify; }
  #whoWeAre .baseButton {
    margin: auto;
    margin-top: 40px; }

#products {
  background-color: #e5e5e5;
  height: 50%;
  padding: 60px 0 60px 0; }
  #products #containerTable {
    display: flex;
    flex-direction: row;
    margin: 40px auto 13px;
    width: 680px;
    height: 40px; }
    #products #containerTable .containerOption {
      color: #696969;
      font-family: 'Montserrat', sans-serif;
      font-weight: 600;
      font-size: 17px;
      display: flex;
      justify-content: center;
      align-items: center;
      border-bottom: 2px solid #d5d5d5;
      width: calc(680px / 3);
      transition: 0.3s;
      cursor: pointer; }
    #products #containerTable .containerOption.active {
      color: #AB0039;
      border-bottom: 2px solid #AB0039;
      cursor: pointer; }
  #products .productContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 330px;
    width: 770px;
    -webkit-filter: drop-shadow(2px 2px 1px gray);
            filter: drop-shadow(2px 2px 1px gray);
    background-color: white;
    margin: 5px auto; }
    #products .productContainer .productInfo {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center; }
      #products .productContainer .productInfo .containerPhoto {
        width: 160px;
        height: 190px; }
      #products .productContainer .productInfo .productDescription {
        color: #696969;
        font-family: 'Montserrat', sans-serif;
        font-weight: 400;
        font-size: 15px;
        line-height: 24px;
        margin-left: 30px;
        width: 490px;
        height: 190px;
        text-align: justify; }
    #products .productContainer .baseButton {
      margin-top: 35px; }

#getInTouch {
  padding: 60px 0 60px 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; }
  #getInTouch #contactForm {
    display: flex;
    flex-direction: column;
    font-family: 'Montserrat'; }
    #getInTouch #contactForm #contactText {
      font-weight: 400;
      font-size: 15px;
      text-align: center;
      margin: 40px auto 13px; }
    #getInTouch #contactForm #formName {
      margin-top: 20px;
      font-weight: 400;
      font-size: 14px; }
    #getInTouch #contactForm input {
      margin-top: 5px;
      width: 100%;
      font-size: 13px;
      font-weight: 400;
      height: 40px;
      width: 450px;
      border: 1px solid rgba(0, 0, 0, 0.4);
      box-sizing: border-box;
      border-radius: 10px;
      padding-left: 20px;
      padding-right: 20px;
      font-family: 'Montserrat';
      color: black; }
    #getInTouch #contactForm *:focus {
      outline: none; }
    #getInTouch #contactForm input:focus {
      border: 2px solid #AB0039; }
    #getInTouch #contactForm #formMessage {
      margin-top: 5px;
      width: 100%;
      font-size: 13px;
      height: 200px;
      width: 450px;
      border: 1px solid rgba(0, 0, 0, 0.4);
      box-sizing: border-box;
      border-radius: 10px;
      padding: 10px 20px 10px 20px;
      line-height: 20px;
      resize: vertical;
      font-family: 'Montserrat'; }
    #getInTouch #contactForm #formMessage:focus {
      border: 2px solid #AB0039; }
    #getInTouch #contactForm #disclaimer {
      text-align: right;
      font-size: 12px;
      margin-top: 7px; }
    #getInTouch #contactForm .baseButton {
      background-color: #AB0039;
      width: 100%;
      margin-top: 50px;
      align-self: center; }

#news {
  font-family: 'Montserrat';
  background-color: #e5e5e5;
  padding-top: 60px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; }
  #news #allPosts {
    margin: 24px 0 60px 0;
    font-size: 14px;
    color: #AB0039;
    font-weight: 500;
    text-align: center; }
    #news #allPosts a {
      display: block;
      color: inherit;
      text-decoration: none; }
  #news .containerNews {
    display: flex;
    width: 990px;
    height: 460px;
    justify-content: space-between; }
    #news .containerNews .row1 {
      flex-basis: 49%;
      display: flex;
      flex-direction: column; }
      #news .containerNews .row1 .winflectorPhoto {
        width: 100%;
        flex-basis: 50%; }
      #news .containerNews .row1 .first {
        flex-basis: 50%;
        padding-top: 25px; }
    #news .containerNews .row2 {
      flex-basis: 49%;
      display: flex;
      flex-direction: column;
      justify-content: space-between; }
      #news .containerNews .row2 .second {
        flex-basis: 49%; }
      #news .containerNews .row2 .third {
        flex-basis: 49%; }

.news {
  background-color: white;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  padding: 18px 50px 18px 50px;
  display: flex;
  flex-direction: column;
  transition: 0.2s; }
  .news span {
    font-size: 9px;
    color: #D0D0D0;
    font-weight: bold; }
  .news .newsTitle {
    font-size: 28px;
    color: #3d3d3d;
    padding-top: 10px;
    font-weight: bold; }
  .news .newsDesc {
    font-size: 15px;
    padding-top: 15px;
    padding-bottom: 55px;
    color: #3d3d3d;
    opacity: 0.67; }
  .news .newsButton {
    font-size: 12px;
    color: #AB0039;
    font-weight: bold;
    cursor: pointer;
    margin-right: 280px; }

#news::after {
  content: "";
  background-color: #d0d0d0;
  height: 1px;
  width: 100%;
  margin-top: 110px; }

/*
.news:hover {
    background-color: lightgray;
}
*/
footer {
  background-color: #e5e5e5;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  padding-bottom: 30px; }
  footer .linksFoot {
    display: flex; }
    footer .linksFoot .footerLinks {
      padding-top: 40px;
      margin-left: 261px;
      color: #7b7b7b;
      display: flex;
      list-style: none; }
      footer .linksFoot .footerLinks a {
        display: block;
        color: inherit;
        text-decoration: none; }
      footer .linksFoot .footerLinks li {
        padding-right: 30px;
        position: relative; }
      footer .linksFoot .footerLinks li:nth-child(2):hover,
      footer .linksFoot .footerLinks li:nth-child(3):hover {
        color: #3d3d3d; }
      footer .linksFoot .footerLinks .withLine::after {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: calc(100% - 15px);
        background-color: #7b7b7b;
        width: 1px;
        height: 23px; }
    footer .linksFoot .socialMedia {
      padding-top: 37px;
      display: flex;
      width: 170px;
      justify-content: space-between;
      margin-left: auto;
      margin-right: 261px; }
      footer .linksFoot .socialMedia img {
        height: 30px;
        width: 30px; }
  footer .contactFoot {
    margin: 50px 261px 0 261px;
    display: flex;
    justify-content: space-between; }
    footer .contactFoot .text {
      color: #3d3d3d;
      font-size: 15px;
      text-align: right; }
      footer .contactFoot .text span {
        display: block;
        font-weight: bold;
        margin-bottom: -15px; }

html {
  color: #2a2a2a;
  scroll-behavior: smooth; }

html,
body {
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  font-family: 'Open Sans'; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJfc2xpZGVyLnNjc3MiLCJfaGVhZGVyLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJfYmFzZS5zY3NzIiwiX3dob1dlQXJlLnNjc3MiLCJfcHJvZHVjdHMuc2NzcyIsIl9jb250YWN0LnNjc3MiLCJfbmV3cy5zY3NzIiwic3R5bGUuY3NzIiwiX2Zvb3Rlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBLDBFQUFZO0FDUFo7RUFDSSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLFVBQVUsRUFBQTtFQUhkOztJQU9RLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsNkJBQTZCO0lBQzdCLFlBQVk7SUFDWixjQUFjO0lBQ2QsY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztJQUNYLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFlBQVk7SUFDWixlQUFlLEVBQUE7RUFwQnZCOztJQXlCUSxpQ0FBaUMsRUFBQTtFQXpCekM7SUE2QlEsMEJBQTBCLEVBQUE7RUE3QmxDO0lBaUNRLFFBQVE7SUFDUiwwQkFBMEIsRUFBQTtFQWxDbEM7SUFzQ1Esa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsYUFBYTtJQUNiLGdCQUFnQixFQUFBO0lBMUN4QjtNQTZDWSxrQkFBa0I7TUFDbEIsY0FBYztNQUNkLFdBQVc7TUFDWCxTQUFTO01BQ1QsVUFBVTtNQUNWLFlBQVk7TUFDWixhQUFhO01BQ2IsZ0JBQWdCLEVBQUE7TUFwRDVCO1FBdURnQixnQkFBZ0I7UUFDaEIsYUFBYTtRQUNiLHNCQUFzQjtRQUN0Qiw4QkFBOEI7UUFDOUIsWUFBWTtRQUFFLGNBQUE7UUFDZCxrQkFBa0I7UUFDbEIsUUFBUTtRQUNSLDZCQUE2QjtRQUM3QixTQUFTO1FBQ1QsWUFBWSxFQUFBO1FBaEU1QjtVQW1Fb0IseUJBQXlCO1VBQ3pCLGVBQWU7VUFDZixxQ0FBcUM7VUFDckMsZ0JBQWdCLEVBQUE7UUF0RXBDO1VBMEVvQixj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dHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi9zbGlkZXJcIjtcclxuQGltcG9ydCBcIi4vaGVhZGVyXCI7XHJcbkBpbXBvcnQgXCIuL3ZhcmlhYmxlc1wiO1xyXG5AaW1wb3J0IFwiLi9iYXNlXCI7XHJcbkBpbXBvcnQgXCIuL3dob1dlQXJlXCI7XHJcbkBpbXBvcnQgXCIuL3Byb2R1Y3RzXCI7XHJcbkBpbXBvcnQgXCIuL2NvbnRhY3RcIjtcclxuQGltcG9ydCBcIi4vbmV3c1wiO1xyXG5AaW1wb3J0IFwiLi9mb290ZXJcIjtcclxuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsMzAwLDYwMCk7XHJcblxyXG5odG1sIHtcclxuICAgIGNvbG9yOiAjMmEyYTJhO1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XHJcbn1cclxuXHJcbmh0bWwsXHJcbmJvZHkge1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxufSIsIkBpbXBvcnQgJy4vdmFyaWFibGVzJztcclxuXHJcbiNzbGlkZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHotaW5kZXg6IDA7XHJcblxyXG4gICAgYS5jb250cm9sX3ByZXYsXHJcbiAgICBhLmNvbnRyb2xfbmV4dCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xyXG4gICAgICAgIHotaW5kZXg6IDk5OTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwYWRkaW5nOiA0JSAzJTtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgYS5jb250cm9sX3ByZXY6aG92ZXIsXHJcbiAgICBhLmNvbnRyb2xfbmV4dDpob3ZlciB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xyXG4gICAgfVxyXG5cclxuICAgIGEuY29udHJvbF9wcmV2IHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDJweCAycHggMDtcclxuICAgIH1cclxuXHJcbiAgICBhLmNvbnRyb2xfbmV4dCB7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4IDAgMCAycHg7XHJcbiAgICB9XHJcblxyXG4gICAgdWwge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcblxyXG4gICAgICAgIGxpIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDY1MHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG5cclxuICAgICAgICAgICAgLnNsaWRlckNvbnRhaW5lciB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjYxcHg7IC8qIHRvIGNoYW5nZSAqL1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNDAlKTtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDI1JTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAuc2xpZGVyVGl0bGUge1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuc2xpZGVyVGV4dCB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiA0MHB4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkBpbXBvcnQgJy4vdmFyaWFibGVzJztcclxuXHJcblxyXG5oZWFkZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi10b3A6IDMycHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgei1pbmRleDogMTtcclxuXHJcbiAgICAjcmVjdCB7XHJcbiAgICAgICAgaGVpZ2h0OiA2MnB4O1xyXG4gICAgICAgIHdpZHRoOiAyMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtY29sb3I7XHJcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgICAgIC1tb3otYm94LXNoYWRvdzogMHB4IDBweCA1cHggMXB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgfVxyXG5cclxuICAgIC5sb2dvIHtcclxuICAgICAgICBtYXJnaW46IDAgMTRweCAwIDI1cHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgICNyZWN0MiB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRiYXNlLWNvbG9yO1xyXG4gICAgICAgIGhlaWdodDogNjJweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgICAgIC1tb3otYm94LXNoYWRvdzogMHB4IDBweCA1cHggMXB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLDAsMCwwLjIpO1xyXG5cclxuXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA2MnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDF2dyAwIDF2dztcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRiYXNlLWNvbG9yO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSBhbmQgKG1heC13aWR0aDogMTY5MHB4KSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDF2dyAwIDF2dztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGE6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoJGJhc2UtY29sb3IsICRncmFkaWVudCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUwMHB4KSB7XHJcblxyXG4gICAgI25hdl9saW5rcyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtY29sb3I7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIyJTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIyJTtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA2MnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDN2dyAwIDN2dztcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICAgICAgICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59IiwiJGJhc2UtY29sb3I6ICNBQjAwMzk7XHJcbiRiYmxhY2s6ICMzRDNEM0Q7XHJcbiRncmFkaWVudDogIzZGMTUyOTsiLCIqIHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG59XHJcblxyXG5hIHtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5zZWN0aW9uVGl0bGUge1xyXG5cdGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblx0Zm9udC13ZWlnaHQ6IDYwMDtcclxuXHRjb2xvcjogIzNkM2QzZDtcclxuXHRmb250LXNpemU6IDM0cHg7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uYmFzZUJ1dHRvbiB7XHJcblx0Y29sb3I6IHdoaXRlO1xyXG5cdGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblx0Ym9yZGVyLXJhZGl1czogMjBweDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0Zm9udC13ZWlnaHQ6IDYwMDtcclxuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgkYmFzZS1jb2xvciAxLjklLCAkZ3JhZGllbnQgMzIwLjg2JSk7XHJcblx0d2lkdGg6IDIyMnB4O1xyXG5cdGhlaWdodDogNDBweDtcclxuXHRib3JkZXI6IG5vbmU7XHJcblx0Ym94LXNoYWRvdzogMHB4IDRweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uYmFzZUJ1dHRvbjpmb2N1cyB7XHJcblx0b3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLmJhc2VCdXR0b246aG92ZXIge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgkYmFzZS1jb2xvciwgJGdyYWRpZW50KTtcclxufVxyXG5cclxuI2IydCB7XHJcblx0b3BhY2l0eTogMDtcclxuXHR0cmFuc2l0aW9uOiAwLjJzO1xyXG5cdHBvc2l0aW9uOiBmaXhlZDtcclxuXHRoZWlnaHQ6IDYwcHg7XHJcblx0d2lkdGg6IDYwcHg7XHJcblx0Ym90dG9tOiA1MHB4O1xyXG5cdHJpZ2h0OiA1MHB4O1xyXG5cdHotaW5kZXg6IDk5O1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbn0iLCJAaW1wb3J0ICcuL3ZhcmlhYmxlcyc7XHJcblxyXG5cclxuI3dob1dlQXJlIHtcclxuICAgIHBhZGRpbmc6IDYwcHggMCA2MHB4IDA7XHJcblxyXG4gICAgI2Fib3V0dXMge1xyXG4gICAgICAgIHdpZHRoOiA4MDVweDtcclxuICAgICAgICBtYXJnaW46IDMwcHggYXV0bztcclxuICAgICAgICBsaW5lLWhlaWdodDogMzBweDtcclxuICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgY29sb3I6ICM3RDdEN0Q7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgICB9XHJcblxyXG4gICAgLmJhc2VCdXR0b24ge1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgfVxyXG5cclxufSIsIkBpbXBvcnQgJy4vdmFyaWFibGVzJztcclxuXHJcblxyXG5cclxuI3Byb2R1Y3RzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7XHJcbiAgICBoZWlnaHQ6IDUwJTtcclxuICAgIHBhZGRpbmc6IDYwcHggMCA2MHB4IDA7XHJcblxyXG4gICAgI2NvbnRhaW5lclRhYmxlIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG8gMTNweDtcclxuICAgICAgICB3aWR0aDogNjgwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG5cclxuICAgICAgICAuY29udGFpbmVyT3B0aW9uIHtcclxuICAgICAgICAgICAgY29sb3I6ICM2OTY5Njk7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZDVkNWQ1O1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYyg2ODBweCAvIDMpO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmNvbnRhaW5lck9wdGlvbi5hY3RpdmUge1xyXG4gICAgICAgICAgICBjb2xvcjogJGJhc2UtY29sb3I7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYmFzZS1jb2xvcjtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucHJvZHVjdENvbnRhaW5lciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiAzMzBweDtcclxuICAgICAgICB3aWR0aDogNzcwcHg7XHJcbiAgICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygycHggMnB4IDFweCBncmF5KTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBtYXJnaW46IDVweCBhdXRvO1xyXG5cclxuICAgICAgICAucHJvZHVjdEluZm8ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgIC5jb250YWluZXJQaG90byB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTYwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE5MHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAucHJvZHVjdERlc2NyaXB0aW9uIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjNjk2OTY5O1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDQ5MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxOTBweDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5iYXNlQnV0dG9uIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMzVweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAaW1wb3J0ICcuL3ZhcmlhYmxlcyc7XHJcblxyXG4jZ2V0SW5Ub3VjaCB7XHJcblx0cGFkZGluZzogNjBweCAwIDYwcHggMDtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcblx0I2NvbnRhY3RGb3JtIHtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdFx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcclxuXHJcblx0XHQjY29udGFjdFRleHQge1xyXG5cdFx0XHRmb250LXdlaWdodDogNDAwO1xyXG5cdFx0XHRmb250LXNpemU6IDE1cHg7XHJcblx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdFx0bWFyZ2luOiA0MHB4IGF1dG8gMTNweDtcclxuXHRcdH1cclxuXHJcblx0XHQjZm9ybU5hbWUge1xyXG5cdFx0XHRtYXJnaW4tdG9wOiAyMHB4O1xyXG5cdFx0XHRmb250LXdlaWdodDogNDAwO1xyXG5cdFx0XHRmb250LXNpemU6IDE0cHg7XHJcblx0XHR9XHJcblxyXG5cdFx0aW5wdXQge1xyXG5cdFx0XHRtYXJnaW4tdG9wOiA1cHg7XHJcblx0XHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0XHRmb250LXNpemU6IDEzcHg7XHJcblx0XHRcdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0XHRcdGhlaWdodDogNDBweDtcclxuXHRcdFx0d2lkdGg6IDQ1MHB4O1xyXG5cdFx0XHRib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcblx0XHRcdHBhZGRpbmctbGVmdDogMjBweDtcclxuXHRcdFx0cGFkZGluZy1yaWdodDogMjBweDtcclxuXHRcdFx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcclxuXHRcdFx0Y29sb3I6IGJsYWNrO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHQqOmZvY3VzIHtcclxuXHRcdFx0b3V0bGluZTogbm9uZTtcclxuXHRcdH1cclxuXHJcblx0XHRpbnB1dDpmb2N1cyB7XHJcblx0XHRcdGJvcmRlcjogMnB4IHNvbGlkICRiYXNlLWNvbG9yO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHQjZm9ybU1lc3NhZ2Uge1xyXG5cdFx0XHRtYXJnaW4tdG9wOiA1cHg7XHJcblx0XHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0XHRmb250LXNpemU6IDEzcHg7XHJcblx0XHRcdGhlaWdodDogMjAwcHg7XHJcblx0XHRcdHdpZHRoOiA0NTBweDtcclxuXHRcdFx0Ym9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRib3JkZXItcmFkaXVzOiAxMHB4O1xyXG5cdFx0XHRwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAyMHB4O1xyXG5cdFx0XHRsaW5lLWhlaWdodDogMjBweDtcclxuXHRcdFx0cmVzaXplOiB2ZXJ0aWNhbDtcclxuXHRcdFx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0I2Zvcm1NZXNzYWdlOmZvY3VzIHtcclxuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJGJhc2UtY29sb3I7XHJcblx0XHR9XHJcblxyXG5cdFx0I2Rpc2NsYWltZXIge1xyXG5cdFx0XHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRcdFx0Zm9udC1zaXplOiAxMnB4O1xyXG5cdFx0XHRtYXJnaW4tdG9wOiA3cHg7XHJcblx0XHR9XHJcblxyXG5cdFx0LmJhc2VCdXR0b24ge1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYmFzZS1jb2xvcjtcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdG1hcmdpbi10b3A6IDUwcHg7XHJcblx0XHRcdGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHRcdH1cclxuXHR9XHJcbn0iLCJAaW1wb3J0ICcuL3ZhcmlhYmxlcyc7XHJcblxyXG4jbmV3cyB7XHJcblxyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7XHJcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICNhbGxQb3N0cyB7XHJcblxyXG4gICAgICAgIG1hcmdpbjogMjRweCAwIDYwcHggMDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgY29sb3I6ICRiYXNlLWNvbG9yO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jb250YWluZXJOZXdzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIHdpZHRoOiA5OTBweDtcclxuICAgICAgICBoZWlnaHQ6IDQ2MHB4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgLnJvdzEge1xyXG4gICAgICAgICAgICBmbGV4LWJhc2lzOiA0OSU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgICAgICAgICAud2luZmxlY3RvclBob3RvIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgZmxleC1iYXNpczogNTAlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZmlyc3Qge1xyXG4gICAgICAgICAgICAgICAgZmxleC1iYXNpczogNTAlO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDI1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5yb3cyIHtcclxuICAgICAgICAgICAgZmxleC1iYXNpczogNDklO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAgICAgICAuc2Vjb25kIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtYmFzaXM6IDQ5JTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLnRoaXJkIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtYmFzaXM6IDQ5JTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4ubmV3cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJveC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XHJcbiAgICBwYWRkaW5nOiAxOHB4IDUwcHggMThweCA1MHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xyXG5cclxuICAgIC8vICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBzcGFuIHtcclxuICAgICAgICBmb250LXNpemU6IDlweDtcclxuICAgICAgICBjb2xvcjogI0QwRDBEMDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLm5ld3NUaXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICAgIGNvbG9yOiAjM2QzZDNkO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG5cclxuICAgIC5uZXdzRGVzYyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA1NXB4O1xyXG4gICAgICAgIGNvbG9yOiAjM2QzZDNkO1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNjc7XHJcbiAgICB9XHJcblxyXG4gICAgLm5ld3NCdXR0b24ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBjb2xvcjogI0FCMDAzOTtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyODBweDtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbiNuZXdzOjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2QwZDBkMDtcclxuICAgIGhlaWdodDogMXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tdG9wOiAxMTBweDtcclxufVxyXG5cclxuLypcclxuLm5ld3M6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG59XHJcbiovIiwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsMzAwLDYwMCk7XG4jc2xpZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiAwOyB9XG4gICNzbGlkZXIgYS5jb250cm9sX3ByZXYsXG4gICNzbGlkZXIgYS5jb250cm9sX25leHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTtcbiAgICB6LWluZGV4OiA5OTk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogNCUgMyU7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICNzbGlkZXIgYS5jb250cm9sX3ByZXY6aG92ZXIsXG4gICNzbGlkZXIgYS5jb250cm9sX25leHQ6aG92ZXIge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsgfVxuICAjc2xpZGVyIGEuY29udHJvbF9wcmV2IHtcbiAgICBib3JkZXItcmFkaXVzOiAwIDJweCAycHggMDsgfVxuICAjc2xpZGVyIGEuY29udHJvbF9uZXh0IHtcbiAgICByaWdodDogMDtcbiAgICBib3JkZXItcmFkaXVzOiAycHggMCAwIDJweDsgfVxuICAjc2xpZGVyIHVsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG4gICAgI3NsaWRlciB1bCBsaSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgIGhlaWdodDogNjUwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjY2NjOyB9XG4gICAgICAjc2xpZGVyIHVsIGxpIC5zbGlkZXJDb250YWluZXIge1xuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHdpZHRoOiA2NjFweDtcbiAgICAgICAgLyogdG8gY2hhbmdlICovXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC00MCUpO1xuICAgICAgICBsZWZ0OiAyNSU7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgICAgICAjc2xpZGVyIHVsIGxpIC5zbGlkZXJDb250YWluZXIgLnNsaWRlclRpdGxlIHtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgICAgICAgI3NsaWRlciB1bCBsaSAuc2xpZGVyQ29udGFpbmVyIC5zbGlkZXJUZXh0IHtcbiAgICAgICAgICBtYXJnaW46IDQwcHggMDtcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMzVweDtcbiAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmOyB9XG5cbmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi10b3A6IDMycHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgei1pbmRleDogMTsgfVxuICBoZWFkZXIgI3JlY3Qge1xuICAgIGhlaWdodDogNjJweDtcbiAgICB3aWR0aDogMjAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBQjAwMzk7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIC1tb3otYm94LXNoYWRvdzogMHB4IDBweCA1cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG4gIGhlYWRlciAubG9nbyB7XG4gICAgbWFyZ2luOiAwIDE0cHggMCAyNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICBoZWFkZXIgI3JlY3QyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0FCMDAzOTtcbiAgICBoZWlnaHQ6IDYycHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIC1tb3otYm94LXNoYWRvdzogMHB4IDBweCA1cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG4gICAgaGVhZGVyICNyZWN0MiBhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgaGVpZ2h0OiA2MnB4O1xuICAgICAgcGFkZGluZzogMCAxdncgMCAxdnc7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUIwMDM5O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JzsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSBhbmQgKG1heC13aWR0aDogMTY5MHB4KSB7XG4gICAgICAgIGhlYWRlciAjcmVjdDIgYSB7XG4gICAgICAgICAgcGFkZGluZzogMCAxdncgMCAxdnc7IH0gfVxuICAgIGhlYWRlciAjcmVjdDIgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoI0FCMDAzOSwgIzZGMTUyOSk7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTAwcHgpIHtcbiAgI25hdl9saW5rcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0FCMDAzOTtcbiAgICBtYXJnaW4tbGVmdDogMjIlO1xuICAgIG1hcmdpbi1yaWdodDogMjIlO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICAjbmF2X2xpbmtzIGEge1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBoZWlnaHQ6IDYycHg7XG4gICAgICBwYWRkaW5nOiAwIDN2dyAwIDN2dztcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbiAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7IH0gfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLnNlY3Rpb25UaXRsZSB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjM2QzZDNkO1xuICBmb250LXNpemU6IDM0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uYmFzZUJ1dHRvbiB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoI0FCMDAzOSAxLjklLCAjNkYxNTI5IDMyMC44NiUpO1xuICB3aWR0aDogMjIycHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3gtc2hhZG93OiAwcHggNHB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5iYXNlQnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG4uYmFzZUJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjQUIwMDM5LCAjNkYxNTI5KTsgfVxuXG4jYjJ0IHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogMC4ycztcbiAgcG9zaXRpb246IGZpeGVkO1xuICBoZWlnaHQ6IDYwcHg7XG4gIHdpZHRoOiA2MHB4O1xuICBib3R0b206IDUwcHg7XG4gIHJpZ2h0OiA1MHB4O1xuICB6LWluZGV4OiA5OTtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbiN3aG9XZUFyZSB7XG4gIHBhZGRpbmc6IDYwcHggMCA2MHB4IDA7IH1cbiAgI3dob1dlQXJlICNhYm91dHVzIHtcbiAgICB3aWR0aDogODA1cHg7XG4gICAgbWFyZ2luOiAzMHB4IGF1dG87XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGNvbG9yOiAjN0Q3RDdEO1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG4gICN3aG9XZUFyZSAuYmFzZUJ1dHRvbiB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDQwcHg7IH1cblxuI3Byb2R1Y3RzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTVlNTtcbiAgaGVpZ2h0OiA1MCU7XG4gIHBhZGRpbmc6IDYwcHggMCA2MHB4IDA7IH1cbiAgI3Byb2R1Y3RzICNjb250YWluZXJUYWJsZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIG1hcmdpbjogNDBweCBhdXRvIDEzcHg7XG4gICAgd2lkdGg6IDY4MHB4O1xuICAgIGhlaWdodDogNDBweDsgfVxuICAgICNwcm9kdWN0cyAjY29udGFpbmVyVGFibGUgLmNvbnRhaW5lck9wdGlvbiB7XG4gICAgICBjb2xvcjogIzY5Njk2OTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgZm9udC1zaXplOiAxN3B4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZDVkNWQ1O1xuICAgICAgd2lkdGg6IGNhbGMoNjgwcHggLyAzKTtcbiAgICAgIHRyYW5zaXRpb246IDAuM3M7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAjcHJvZHVjdHMgI2NvbnRhaW5lclRhYmxlIC5jb250YWluZXJPcHRpb24uYWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjQUIwMDM5O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNBQjAwMzk7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgI3Byb2R1Y3RzIC5wcm9kdWN0Q29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDMzMHB4O1xuICAgIHdpZHRoOiA3NzBweDtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggMXB4IGdyYXkpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIG1hcmdpbjogNXB4IGF1dG87IH1cbiAgICAjcHJvZHVjdHMgLnByb2R1Y3RDb250YWluZXIgLnByb2R1Y3RJbmZvIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAjcHJvZHVjdHMgLnByb2R1Y3RDb250YWluZXIgLnByb2R1Y3RJbmZvIC5jb250YWluZXJQaG90byB7XG4gICAgICAgIHdpZHRoOiAxNjBweDtcbiAgICAgICAgaGVpZ2h0OiAxOTBweDsgfVxuICAgICAgI3Byb2R1Y3RzIC5wcm9kdWN0Q29udGFpbmVyIC5wcm9kdWN0SW5mbyAucHJvZHVjdERlc2NyaXB0aW9uIHtcbiAgICAgICAgY29sb3I6ICM2OTY5Njk7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICAgICAgICB3aWR0aDogNDkwcHg7XG4gICAgICAgIGhlaWdodDogMTkwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7IH1cbiAgICAjcHJvZHVjdHMgLnByb2R1Y3RDb250YWluZXIgLmJhc2VCdXR0b24ge1xuICAgICAgbWFyZ2luLXRvcDogMzVweDsgfVxuXG4jZ2V0SW5Ub3VjaCB7XG4gIHBhZGRpbmc6IDYwcHggMCA2MHB4IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICNnZXRJblRvdWNoICNjb250YWN0Rm9ybSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7IH1cbiAgICAjZ2V0SW5Ub3VjaCAjY29udGFjdEZvcm0gI2NvbnRhY3RUZXh0IHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDQwcHggYXV0byAxM3B4OyB9XG4gICAgI2dldEluVG91Y2ggI2NvbnRhY3RGb3JtICNmb3JtTmFtZSB7XG4gICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgICNnZXRJblRvdWNoICNjb250YWN0Rm9ybSBpbnB1dCB7XG4gICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICB3aWR0aDogNDUwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xuICAgICAgY29sb3I6IGJsYWNrOyB9XG4gICAgI2dldEluVG91Y2ggI2NvbnRhY3RGb3JtICo6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAgICNnZXRJblRvdWNoICNjb250YWN0Rm9ybSBpbnB1dDpmb2N1cyB7XG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjQUIwMDM5OyB9XG4gICAgI2dldEluVG91Y2ggI2NvbnRhY3RGb3JtICNmb3JtTWVzc2FnZSB7XG4gICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGhlaWdodDogMjAwcHg7XG4gICAgICB3aWR0aDogNDUwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4IDIwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgIHJlc2l6ZTogdmVydGljYWw7XG4gICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnOyB9XG4gICAgI2dldEluVG91Y2ggI2NvbnRhY3RGb3JtICNmb3JtTWVzc2FnZTpmb2N1cyB7XG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjQUIwMDM5OyB9XG4gICAgI2dldEluVG91Y2ggI2NvbnRhY3RGb3JtICNkaXNjbGFpbWVyIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbWFyZ2luLXRvcDogN3B4OyB9XG4gICAgI2dldEluVG91Y2ggI2NvbnRhY3RGb3JtIC5iYXNlQnV0dG9uIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNBQjAwMzk7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7IH1cblxuI25ld3Mge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlNWU1O1xuICBwYWRkaW5nLXRvcDogNjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgI25ld3MgI2FsbFBvc3RzIHtcbiAgICBtYXJnaW46IDI0cHggMCA2MHB4IDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGNvbG9yOiAjQUIwMDM5O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgI25ld3MgI2FsbFBvc3RzIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAjbmV3cyAuY29udGFpbmVyTmV3cyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogOTkwcHg7XG4gICAgaGVpZ2h0OiA0NjBweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAjbmV3cyAuY29udGFpbmVyTmV3cyAucm93MSB7XG4gICAgICBmbGV4LWJhc2lzOiA0OSU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAgICAgI25ld3MgLmNvbnRhaW5lck5ld3MgLnJvdzEgLndpbmZsZWN0b3JQaG90byB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbGV4LWJhc2lzOiA1MCU7IH1cbiAgICAgICNuZXdzIC5jb250YWluZXJOZXdzIC5yb3cxIC5maXJzdCB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgICAgcGFkZGluZy10b3A6IDI1cHg7IH1cbiAgICAjbmV3cyAuY29udGFpbmVyTmV3cyAucm93MiB7XG4gICAgICBmbGV4LWJhc2lzOiA0OSU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAgICAgI25ld3MgLmNvbnRhaW5lck5ld3MgLnJvdzIgLnNlY29uZCB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDQ5JTsgfVxuICAgICAgI25ld3MgLmNvbnRhaW5lck5ld3MgLnJvdzIgLnRoaXJkIHtcbiAgICAgICAgZmxleC1iYXNpczogNDklOyB9XG5cbi5uZXdzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJveC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIHBhZGRpbmc6IDE4cHggNTBweCAxOHB4IDUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHRyYW5zaXRpb246IDAuMnM7IH1cbiAgLm5ld3Mgc3BhbiB7XG4gICAgZm9udC1zaXplOiA5cHg7XG4gICAgY29sb3I6ICNEMEQwRDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgLm5ld3MgLm5ld3NUaXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICAgIGNvbG9yOiAjM2QzZDNkO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIC5uZXdzIC5uZXdzRGVzYyB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA1NXB4O1xuICAgIGNvbG9yOiAjM2QzZDNkO1xuICAgIG9wYWNpdHk6IDAuNjc7IH1cbiAgLm5ld3MgLm5ld3NCdXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjb2xvcjogI0FCMDAzOTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWFyZ2luLXJpZ2h0OiAyODBweDsgfVxuXG4jbmV3czo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBkMGQwO1xuICBoZWlnaHQ6IDFweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDExMHB4OyB9XG5cbi8qXHJcbi5uZXdzOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcclxufVxyXG4qL1xuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTVlNTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7IH1cbiAgZm9vdGVyIC5saW5rc0Zvb3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICBmb290ZXIgLmxpbmtzRm9vdCAuZm9vdGVyTGlua3Mge1xuICAgICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogMjYxcHg7XG4gICAgICBjb2xvcjogIzdiN2I3YjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBsaXN0LXN0eWxlOiBub25lOyB9XG4gICAgICBmb290ZXIgLmxpbmtzRm9vdCAuZm9vdGVyTGlua3MgYSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgICBmb290ZXIgLmxpbmtzRm9vdCAuZm9vdGVyTGlua3MgbGkge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIGZvb3RlciAubGlua3NGb290IC5mb290ZXJMaW5rcyBsaTpudGgtY2hpbGQoMik6aG92ZXIsXG4gICAgICBmb290ZXIgLmxpbmtzRm9vdCAuZm9vdGVyTGlua3MgbGk6bnRoLWNoaWxkKDMpOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICMzZDNkM2Q7IH1cbiAgICAgIGZvb3RlciAubGlua3NGb290IC5mb290ZXJMaW5rcyAud2l0aExpbmU6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogY2FsYygxMDAlIC0gMTVweCk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM3YjdiN2I7XG4gICAgICAgIHdpZHRoOiAxcHg7XG4gICAgICAgIGhlaWdodDogMjNweDsgfVxuICAgIGZvb3RlciAubGlua3NGb290IC5zb2NpYWxNZWRpYSB7XG4gICAgICBwYWRkaW5nLXRvcDogMzdweDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICB3aWR0aDogMTcwcHg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgIG1hcmdpbi1yaWdodDogMjYxcHg7IH1cbiAgICAgIGZvb3RlciAubGlua3NGb290IC5zb2NpYWxNZWRpYSBpbWcge1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgIHdpZHRoOiAzMHB4OyB9XG4gIGZvb3RlciAuY29udGFjdEZvb3Qge1xuICAgIG1hcmdpbjogNTBweCAyNjFweCAwIDI2MXB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgZm9vdGVyIC5jb250YWN0Rm9vdCAudGV4dCB7XG4gICAgICBjb2xvcjogIzNkM2QzZDtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgICBmb290ZXIgLmNvbnRhY3RGb290IC50ZXh0IHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC0xNXB4OyB9XG5cbmh0bWwge1xuICBjb2xvcjogIzJhMmEyYTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7IH1cblxuaHRtbCxcbmJvZHkge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnOyB9XG4iLCJAaW1wb3J0ICcuL3ZhcmlhYmxlcyc7XHJcblxyXG5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTVlNTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmctYm90dG9tOiAzMHB4O1xyXG5cclxuICAgIC5saW5rc0Zvb3Qge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICAgIC5mb290ZXJMaW5rcyB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMjYxcHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjN2I3YjdiO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG5cclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsaTpudGgtY2hpbGQoMik6aG92ZXIsXHJcbiAgICAgICAgICAgIGxpOm50aC1jaGlsZCgzKTpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogIzNkM2QzZDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLndpdGhMaW5lOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogY2FsYygxMDAlIC0gMTVweCk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2I3YjdiO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMjNweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNvY2lhbE1lZGlhIHtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDM3cHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxNzBweDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyNjFweDtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRhY3RGb290IHtcclxuICAgICAgICBtYXJnaW46IDUwcHggMjYxcHggMCAyNjFweDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgLnRleHQge1xyXG4gICAgICAgICAgICBjb2xvcjogIzNkM2QzZDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuXHJcbiAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0xNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19 */
