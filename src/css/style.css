@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600);
.hero-slider {
  position: relative; }
  .hero-slider__slide {
    height: 650px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover; }
    @media (max-width: 800px) {
      .hero-slider__slide {
        height: 100vh; } }

.slider__container {
  margin-top: 15px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 700px;
  /* to change */
  white-space: normal;
  position: relative;
  top: 50%;
  transform: translate(0, -40%);
  left: 25%;
  color: white; }
  @media (max-width: 1390px) {
    .slider__container {
      width: 60%;
      left: 20%; } }
  @media (max-width: 800px) {
    .slider__container {
      margin-top: 0; } }
  .slider__container__title {
    text-transform: uppercase;
    font-size: 40px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600; }
    @media (max-width: 1390px) {
      .slider__container__title {
        font-size: 37px; } }
    @media (max-width: 800px) {
      .slider__container__title {
        font-size: 35px; } }
  .slider__container__text {
    margin: 40px 0;
    font-size: 18px;
    font-weight: 500;
    line-height: 35px;
    font-family: 'Montserrat', sans-serif;
    text-align: justify; }
    @media (max-width: 1390px) {
      .slider__container__text {
        font-size: 15px;
        line-height: 30px; } }
  .slider__container__button {
    background-size: 100%;
    background-image: linear-gradient(#AB0039, #6F1529);
    position: relative;
    z-index: 1;
    color: white;
    font-family: 'Montserrat', sans-serif;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    width: 220px;
    height: 40px;
    border: none;
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    -webkit-transition: background-image 0.2s ease-in-out; }
    .slider__container__button:before {
      background-image: linear-gradient(#6F1529, #AB0039);
      content: "";
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      z-index: -100;
      transition: opacity 0.6s;
      border-radius: 20px; }
    .slider__container__button:hover:before {
      opacity: 1; }
    .slider__container__button:focus {
      outline: none; }
    .slider__container__button:hover {
      background-image: linear-gradient(#AB0039, #6F1529); }

.slick-dots {
  z-index: 100;
  position: absolute;
  left: 0;
  right: 0;
  padding: 0;
  margin: 0;
  text-align: center;
  top: 15px; }

/* GlideJS */
.glide__bullets {
  z-index: 100;
  position: absolute;
  left: 0;
  right: 0;
  padding: 0;
  margin: 0;
  text-align: center;
  bottom: 3em !important; }
  @media (max-width: 1390px) {
    .glide__bullets {
      left: 46.5% !important; } }
  .glide__bullets button {
    display: inline-block;
    text-indent: -9999px;
    border-radius: 0;
    font-size: 0;
    line-height: 0;
    width: 8px;
    height: 8px;
    background-color: rgba(255, 255, 255, 0.5);
    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.25);
    border: none;
    margin: 0 15px;
    padding: 0;
    outline: none;
    transition: background-color 0.3s ease-out;
    cursor: pointer; }
  .glide__bullets button.glide__bullet--active {
    background-color: #fff;
    transform: scale(1.4); }

.navbar {
  display: flex;
  margin-top: 32px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  align-items: center;
  z-index: 1; }
  .navbar__rect1 {
    height: 62px;
    width: 20%;
    background-color: #AB0039;
    box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.2); }
    @media (max-width: 800px) {
      .navbar__rect1 {
        height: 50px; } }
  .navbar__logo {
    margin: 0 14px 0 25px;
    cursor: pointer; }
    @media (max-width: 800px) {
      .navbar__logo img {
        width: 150px; } }
  .navbar__rect2 {
    display: flex;
    align-items: center;
    background-color: #AB0039;
    height: 62px;
    width: 100%;
    box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.2); }
    @media (max-width: 800px) {
      .navbar__rect2 {
        height: 50px; } }
  .navbar__links {
    background-color: #AB0039;
    margin-left: 15%;
    margin-right: 20%;
    align-items: center;
    width: 100%;
    display: flex;
    justify-content: space-between;
    list-style: none;
    flex-wrap: wrap; }
    @media (max-width: 1390px) {
      .navbar__links {
        margin-left: 5%;
        margin-right: 5%; } }
    @media (max-width: 956px) {
      .navbar__links {
        margin-left: 0;
        margin-right: 0; } }
    @media (max-width: 956px) {
      .navbar__links {
        display: none; } }
    .navbar__links__link {
      font-size: 13px;
      font-weight: 600;
      display: flex;
      height: 62px;
      width: 20%;
      padding: 0 1vw;
      border: none;
      justify-content: center;
      align-items: center;
      background-color: #AB0039;
      cursor: pointer;
      text-decoration: none;
      color: white;
      font-family: 'Montserrat'; }
      .navbar__links__link:hover {
        background-image: linear-gradient(#AB0039, #6F1529); }
      @media screen and (min-width: 1000px) and (max-width: 1690px) {
        .navbar__links__link {
          padding: 0 1vw; } }
    .navbar__links__dropdown {
      position: relative; }
      .navbar__links__dropdown:hover .navbar__links__dropdown__dropdown-content {
        display: block; }
      .navbar__links__dropdown__dropbtn {
        color: white;
        text-align: center;
        text-decoration: none; }
      .navbar__links__dropdown__dropdown-content {
        width: 100%;
        font-size: 15px;
        position: absolute;
        display: none;
        top: 100%;
        background-color: white;
        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        z-index: 1; }
        .navbar__links__dropdown__dropdown-content:hover {
          display: block; }
        .navbar__links__dropdown__dropdown-content a {
          color: black;
          padding: 20px 16px;
          text-decoration: none;
          display: block;
          border-bottom: 1px lightgray solid;
          /* to discuss */
          text-align: left; }
        .navbar__links__dropdown__dropdown-content a:hover {
          background-color: #f1f1f1; }

.arrow {
  border: solid white;
  border-width: 0 3px 3px 0;
  display: inline-block;
  padding: 3px;
  margin: 0 0 2px 5px;
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg); }

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

a {
  text-decoration: none; }

.section-title {
  font-family: 'Montserrat', sans-serif;
  font-weight: 600;
  color: #3d3d3d;
  font-size: 34px;
  text-align: center; }
  @media (max-width: 800px) {
    .section-title {
      font-size: 30px;
      padding: 0 30px; } }

.about-us {
  padding: 60px 0 60px 0; }
  .about-us__text {
    width: 820px;
    margin: 30px auto;
    line-height: 30px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
    color: #7D7D7D;
    font-size: 15px;
    text-align: justify; }
    @media (max-width: 1140px) {
      .about-us__text {
        width: 60%; } }
    @media (max-width: 800px) {
      .about-us__text {
        margin-top: 50px;
        width: 80%; } }
  .about-us__button {
    background-size: 100%;
    background-image: linear-gradient(#AB0039, #6F1529);
    position: relative;
    z-index: 1;
    color: white;
    font-family: 'Montserrat', sans-serif;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    width: 220px;
    height: 40px;
    border: none;
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    -webkit-transition: background-image 0.2s ease-in-out;
    margin: auto;
    margin-top: 40px; }
    .about-us__button:before {
      background-image: linear-gradient(#6F1529, #AB0039);
      content: "";
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      z-index: -100;
      transition: opacity 0.6s;
      border-radius: 20px; }
    .about-us__button:hover:before {
      opacity: 1; }
    .about-us__button:focus {
      outline: none; }
    .about-us__button:hover {
      background-image: linear-gradient(#AB0039, #6F1529); }
    @media (max-width: 800px) {
      .about-us__button {
        margin-top: 50px; } }

.products {
  background-color: #e5e5e5;
  height: 50%;
  padding: 60px 0 60px 0; }
  .products__options {
    padding: 0;
    display: flex;
    justify-content: center;
    margin: 30px auto 0 auto;
    width: 750px;
    height: 40px; }
    @media (max-width: 956px) {
      .products__options {
        width: 70%; } }
    .products__options__unit {
      color: #b1b1b1;
      font-family: 'Montserrat', sans-serif;
      font-weight: 600;
      font-size: 17px;
      display: flex;
      justify-content: center;
      align-items: center;
      border-bottom: 2px solid #d5d5d5;
      width: calc(100% / 3);
      transition: 0.3s;
      cursor: pointer; }
      @media (max-width: 956px) {
        .products__options__unit {
          font-size: 15px; } }
    .products__options__unit.active {
      color: #AB0039;
      border-bottom: 2px solid #AB0039;
      cursor: pointer; }
  .products__container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 10px;
    width: 900px;
    box-shadow: 0px 0px 8px -2px black;
    background-color: white;
    margin: 30px auto 5px auto;
    padding: 30px; }
    @media (max-width: 956px) {
      .products__container {
        width: 80%;
        padding-left: 0px;
        padding-right: 0px; } }
    .products__container__flex {
      display: flex;
      flex-wrap: wrap;
      justify-content: center; }
    .products__container__info {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center; }
    .products__container__photo {
      width: 180px;
      min-width: 160px; }
    .products__container__description {
      color: #696969;
      font-family: 'Montserrat', sans-serif;
      line-height: 30px;
      font-family: 'Montserrat', sans-serif;
      font-weight: 500;
      color: #7D7D7D;
      font-size: 15px;
      text-align: justify;
      margin: 20px;
      width: 65%; }
      @media (max-width: 956px) {
        .products__container__description {
          width: 80%; } }
  .products__button {
    background-size: 100%;
    background-image: linear-gradient(#AB0039, #6F1529);
    position: relative;
    z-index: 1;
    color: white;
    font-family: 'Montserrat', sans-serif;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    width: 220px;
    height: 40px;
    border: none;
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    -webkit-transition: background-image 0.2s ease-in-out;
    margin-top: 25px; }
    .products__button:before {
      background-image: linear-gradient(#6F1529, #AB0039);
      content: "";
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      z-index: -100;
      transition: opacity 0.6s;
      border-radius: 20px; }
    .products__button:hover:before {
      opacity: 1; }
    .products__button:focus {
      outline: none; }
    .products__button:hover {
      background-image: linear-gradient(#AB0039, #6F1529); }

.contact {
  background-color: #AB0039;
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 50px 15%; }
  @media (max-width: 1140px) {
    .contact {
      flex-flow: column; } }
  .contact__stats {
    flex-basis: 50%;
    display: flex;
    flex-flow: column;
    justify-content: flex-start;
    align-items: center;
    margin-right: 20px; }
    @media (max-width: 1140px) {
      .contact__stats {
        margin-right: 0; } }
    .contact__stats .section-title {
      color: white; }
    .contact__stats__numbers {
      display: flex;
      margin: 30px 0;
      width: 100%;
      border: 1px solid white;
      border-radius: 30px;
      height: 150px; }
      @media (max-width: 800px) {
        .contact__stats__numbers {
          width: 80vw; } }
      .contact__stats__numbers .stat-item {
        flex-basis: 35%;
        display: flex;
        flex-flow: column;
        justify-content: center;
        align-items: center;
        font-family: Montserrat;
        font-weight: 600;
        color: white;
        border-right: 1px solid white; }
        .contact__stats__numbers .stat-item .stat-num {
          font-size: 70px; }
          @media (max-width: 800px) {
            .contact__stats__numbers .stat-item .stat-num {
              font-size: 60px; } }
        .contact__stats__numbers .stat-item .stat-desc {
          font-size: 15px;
          text-align: center; }
      .contact__stats__numbers .stat-item-wide {
        flex-basis: 65%;
        display: flex;
        flex-flow: column;
        justify-content: center;
        align-items: center;
        font-family: Montserrat;
        font-weight: 600;
        color: white; }
        .contact__stats__numbers .stat-item-wide .stat-num {
          font-size: 70px; }
          @media (max-width: 800px) {
            .contact__stats__numbers .stat-item-wide .stat-num {
              font-size: 60px; } }
        .contact__stats__numbers .stat-item-wide .stat-desc {
          font-size: 15px;
          text-align: center; }
    .contact__stats__companies {
      width: 90%;
      margin-top: 120px; }
      @media (max-width: 1140px) {
        .contact__stats__companies {
          margin-top: 30px; } }
      .contact__stats__companies .companies__title {
        color: white;
        font-family: Montserrat;
        font-weight: 600;
        font-size: 18px;
        line-height: 20px;
        text-align: center; }
      .contact__stats__companies .companies__logos {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 70px;
        text-align: center; }
        @media (max-width: 1140px) {
          .contact__stats__companies .companies__logos {
            margin-top: 30px;
            margin-bottom: 30px; } }
        .contact__stats__companies .companies__logos .logo {
          height: 2vw; }
          @media (max-width: 1140px) {
            .contact__stats__companies .companies__logos .logo {
              height: 30px; } }
          @media (max-width: 800px) {
            .contact__stats__companies .companies__logos .logo {
              height: 20px; } }
    @media (max-width: 1140px) {
      .contact__stats {
        width: 80%; } }
  .contact__form {
    background-color: white;
    display: flex;
    flex-direction: column;
    font-family: 'Montserrat';
    width: 500px;
    padding: 40px;
    border-radius: 30px; }
    @media (max-width: 800px) {
      .contact__form {
        width: 80vw; } }
    .contact__form__text {
      font-weight: 400;
      font-size: 15px;
      text-align: center; }
    .contact__form__name {
      margin-top: 20px;
      font-weight: 600;
      font-size: 14px; }
    .contact__form input {
      margin-top: 5px;
      width: 100%;
      font-size: 13px;
      font-weight: 400;
      height: 35px;
      border: 1px solid rgba(0, 0, 0, 0.4);
      box-sizing: border-box;
      padding-left: 10px;
      padding-right: 10px;
      font-family: 'Montserrat';
      color: black; }
      .contact__form input:focus {
        border: 2px solid #AB0039; }
    .contact__form *:focus {
      outline: none; }
    .contact__form__message {
      margin-top: 5px;
      width: 100%;
      font-size: 13px;
      height: 100px;
      border: 1px solid rgba(0, 0, 0, 0.4);
      box-sizing: border-box;
      padding: 10px 10px 10px 10px;
      line-height: 20px;
      resize: vertical;
      font-family: 'Montserrat'; }
      .contact__form__message:focus {
        border: 2px solid #AB0039; }
    .contact__form__disclaimer {
      text-align: right;
      font-size: 12px;
      margin-top: 7px; }
  .contact__button {
    background-size: 100%;
    background-image: linear-gradient(#AB0039, #6F1529);
    position: relative;
    z-index: 1;
    color: white;
    font-family: 'Montserrat', sans-serif;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    width: 220px;
    height: 40px;
    border: none;
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    -webkit-transition: background-image 0.2s ease-in-out;
    background-color: #AB0039;
    width: 100%;
    margin-top: 50px;
    align-self: center; }
    .contact__button:before {
      background-image: linear-gradient(#6F1529, #AB0039);
      content: "";
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      z-index: -100;
      transition: opacity 0.6s;
      border-radius: 20px; }
    .contact__button:hover:before {
      opacity: 1; }
    .contact__button:focus {
      outline: none; }
    .contact__button:hover {
      background-image: linear-gradient(#AB0039, #6F1529); }

.news {
  font-family: 'Montserrat';
  background-color: #e5e5e5;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0 15%;
  padding-top: 60px; }
  .news__posts {
    margin: 24px 0 60px;
    font-size: 15px;
    color: #AB0039;
    font-weight: 600;
    text-align: center; }
    .news__posts a {
      display: block;
      color: inherit;
      text-decoration: none; }
  .news__container {
    display: flex;
    justify-content: center;
    margin-bottom: 80px;
    width: 1000px; }
    @media (max-width: 1140px) {
      .news__container {
        width: 80vw;
        flex-direction: column; } }
    .news__container__featured-post {
      flex-basis: 49%;
      display: flex;
      flex-direction: column;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-bottom: 20px solid transparent; }
      .news__container__featured-post .first {
        flex-basis: 50%; }
    .news__container__photo {
      flex-basis: 55%;
      -o-object-fit: cover;
         object-fit: cover; }
    .news__container__row2 {
      flex-basis: 49%;
      display: flex;
      flex-direction: column;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-bottom: 20px solid transparent; }
      .news__container__row2 .second {
        flex-basis: 49%;
        margin-bottom: 10px; }
      .news__container__row2 .third {
        flex-basis: 49%;
        margin-top: 10px; }
  .news__block {
    background-color: white;
    padding: 18px 50px;
    display: flex;
    flex-direction: column;
    transition: 0.2s;
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25); }
    .news__block span {
      font-size: 9px;
      color: #D0D0D0;
      font-weight: bold; }
    .news__block__title {
      font-size: 28px;
      color: #3d3d3d;
      padding-top: 10px;
      font-weight: bold; }
    .news__block__desc {
      font-size: 15px;
      padding-top: 15px;
      padding-bottom: 55px;
      color: #3d3d3d;
      opacity: 0.67; }
    .news__block__button {
      font-size: 12px;
      color: #AB0039;
      font-weight: bold;
      cursor: pointer;
      background-color: transparent;
      border: none;
      text-align: left;
      font-family: Montserrat; }

/*
.news:hover {
    background-color: lightgray;
}
*/
.footer {
  position: relative;
  background-color: #1a1a1a;
  overflow: hidden;
  display: flex;
  flex-direction: column; }
  .footer__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 15px 0;
    margin: 0 15%; }
    @media (max-width: 1390px) {
      .footer__container {
        margin: 0 10%; } }
    @media (max-width: 956px) {
      .footer__container {
        flex-direction: column;
        padding-bottom: 70px; } }
  .footer__logo img {
    width: 150px; }
    @media (max-width: 1140px) {
      .footer__logo img {
        width: 130px; } }
    @media (max-width: 956px) {
      .footer__logo img {
        margin: 20px; } }
  .footer__links {
    width: 550px;
    color: white;
    display: flex;
    list-style: none;
    justify-content: space-around; }
    @media (max-width: 1140px) {
      .footer__links {
        width: 470px; } }
    @media (max-width: 956px) {
      .footer__links {
        position: absolute;
        bottom: 20px; } }
    @media (max-width: 800px) {
      .footer__links {
        width: 420px; } }
    .footer__links a {
      display: block;
      color: inherit;
      text-decoration: none; }
    .footer__links li {
      position: relative; }
      .footer__links li:nth-child(2):hover, .footer__links li:nth-child(3):hover {
        color: #AB0039; }
      @media (max-width: 1140px) {
        .footer__links li {
          font-size: 14px; } }
      @media (max-width: 800px) {
        .footer__links li {
          font-size: 12px; } }
    .footer__links .with-line::after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: calc(100% + 15px);
      background-color: white;
      width: 1px;
      height: 23px; }
  .footer__social {
    display: flex;
    width: 150px;
    justify-content: space-between; }

@media (min-width: 957px) and (max-width: 1140px) {
  .footer__social {
    width: 120px; } }
    .footer__social .fab {
      color: white;
      transform: scale(1.5); }
      .footer__social .fab:hover {
        color: #AB0039; }
      @media (max-width: 1140px) {
        .footer__social .fab {
          transform: scale(1.3); } }
  .footer__contact {
    margin: 30px 15% 0;
    display: flex;
    justify-content: space-between; }
    .footer__contact__text {
      color: #323232;
      font-size: 15px;
      text-align: center;
      font-family: Montserrat;
      font-weight: 400;
      line-height: 22px; }
      .footer__contact__text:first-of-type {
        text-align: left; }
      .footer__contact__text:last-of-type {
        text-align: right; }
      .footer__contact__text span {
        font-size: 17px;
        display: block;
        font-weight: 600;
        margin-bottom: -10px; }
    @media (max-width: 1390px) {
      .footer__contact {
        margin: 50px 10% 0; } }
  .footer__overlay {
    background-color: white;
    padding-bottom: 30px; }
    @media (max-width: 1140px) {
      .footer__overlay {
        display: none; } }

.back-to-top {
  opacity: 0;
  transition: 0.2s;
  position: fixed;
  height: 60px;
  width: 60px;
  bottom: 50px;
  right: 50px;
  z-index: 99;
  cursor: pointer; }

.page-banner {
  padding: 200px 0 60px;
  position: relative; }

@media (min-width: 801px) and (max-width: 1140px) {
  .page-banner {
    padding: 180px 0 50px; } }
  @media (max-width: 800px) {
    .page-banner {
      padding: 150px 0 40px; } }
  .page-banner__content {
    position: relative;
    z-index: 2; }
  .page-banner__title {
    font-family: Montserrat;
    font-weight: 600;
    font-size: 3.3rem;
    margin: 0 0 1rem;
    color: white; }

@media (min-width: 801px) and (max-width: 1140px) {
  .page-banner__title {
    font-size: 2.5rem; } }
    @media (max-width: 800px) {
      .page-banner__title {
        font-size: 2.0rem; } }
  .page-banner__bg-image {
    background-size: cover;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0; }
  .page-banner__intro {
    font-family: Montserrat;
    font-weight: 300;
    font-size: 1.6rem;
    line-height: 1.3;
    color: white; }

@media (min-width: 801px) and (max-width: 1140px) {
  .page-banner__intro {
    font-size: 1.45rem; } }
    @media (max-width: 800px) {
      .page-banner__intro {
        font-size: 1.3rem; } }

.page-links {
  position: relative;
  z-index: 1;
  background-color: #E5E5E5;
  margin: 0 0 20px 40px;
  width: 300px;
  font-family: Montserrat;
  float: right; }
  @media (max-width: 800px) {
    .page-links {
      width: auto;
      margin: 0 0 40px 0;
      float: none; } }
  .page-links__title {
    margin: 0;
    font-weight: normal;
    text-align: center;
    padding: 20px 0;
    font-weight: 600;
    background-color: #AB0039;
    color: #FFF; }
    .page-links__title a {
      color: #FFF;
      text-decoration: none;
      background-color: #AB0039; }
  .page-links li {
    border-top: 1px solid color(#E5E5E5 l(-14%)); }
  .page-links li:first-child {
    border-top: none; }
  .page-links .current_page_item {
    text-align: center;
    background-color: #cecece;
    color: #AB0039;
    font-weight: bold; }
  .page-links li a {
    display: block;
    text-align: center;
    padding: 17px 10px;
    text-decoration: none;
    color: black;
    transition: all 0.3s; }
  .page-links li a:hover {
    color: color(#AB0039 b(6%));
    background-color: color(#E5E5E5 blackness(18%) s(65%)); }

.min-list {
  padding: 0;
  margin: 0; }

.min-list li {
  list-style: none; }

.container {
  max-width: 1300px;
  margin: 0 auto;
  position: relative; }

.container--narrow {
  max-width: 960px; }

@media (min-width: 801px) and (max-width: 1140px) {
  .container--narrow {
    margin: 0 60px; } }
  @media (max-width: 800px) {
    .container--narrow {
      margin: 0 30px; } }

.container:after,
.container:before {
  content: " ";
  display: table; }

.container:after {
  clear: both; }

.page-section {
  padding-top: 3.5rem;
  padding-bottom: 3.5rem; }

.page-section p:last-of-type {
  margin-bottom: 0; }

.generic-content {
  font-size: 1.15rem;
  font-family: Montserrat;
  font-style: normal;
  font-weight: normal;
  font-size: 16px;
  line-height: 210%;
  text-align: justify;
  white-space: pre-line; }
  .generic-content blockquote,
  .generic-content blockquote p {
    font-size: 1.5rem;
    font-style: italic; }

/* glide.js */
.glide {
  position: relative;
  width: 100%;
  box-sizing: border-box; }
  .glide * {
    box-sizing: inherit; }
  .glide__track {
    overflow: hidden; }
  .glide__slides {
    position: relative;
    width: 100%;
    list-style: none;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    transform-style: preserve-3d;
    touch-action: pan-Y;
    overflow: hidden;
    padding: 0;
    white-space: nowrap;
    display: flex;
    flex-wrap: nowrap;
    will-change: transform; }
    .glide__slides--dragging {
      -webkit-user-select: none;
         -moz-user-select: none;
          -ms-user-select: none;
              user-select: none; }
  .glide__slide {
    width: 100%;
    height: 100%;
    flex-shrink: 0;
    white-space: normal;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent; }
    .glide__slide a {
      -webkit-user-select: none;
              user-select: none;
      -webkit-user-drag: none;
      -moz-user-select: none;
      -ms-user-select: none; }
  .glide__arrows {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; }
  .glide__bullets {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; }
  .glide--rtl {
    direction: rtl; }

.glide__arrow {
  position: absolute;
  display: block;
  top: 50%;
  z-index: 2;
  color: white;
  text-transform: uppercase;
  padding: 9px 12px;
  background-color: transparent;
  border: 2px solid rgba(255, 255, 255, 0.5);
  border-radius: 4px;
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.1);
  text-shadow: 0 0.25em 0.5em rgba(0, 0, 0, 0.1);
  opacity: 1;
  cursor: pointer;
  transition: opacity 150ms ease, border 300ms ease-in-out;
  transform: translateY(-50%);
  line-height: 1; }
  .glide__arrow:focus {
    outline: none; }
  .glide__arrow:hover {
    border-color: white; }
  .glide__arrow--left {
    left: 2em; }
  .glide__arrow--right {
    right: 2em; }
  .glide__arrow--disabled {
    opacity: 0.33; }

.glide__bullets {
  position: absolute;
  z-index: 2;
  bottom: 2em;
  left: 50%;
  display: inline-flex;
  list-style: none;
  transform: translateX(-50%); }

.glide__bullet {
  background-color: rgba(255, 255, 255, 0.5);
  width: 9px;
  height: 9px;
  padding: 0;
  border-radius: 50%;
  border: 2px solid transparent;
  transition: all 300ms ease-in-out;
  cursor: pointer;
  line-height: 0;
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.1);
  margin: 0 0.25em; }
  .glide__bullet:focus {
    outline: none; }
  .glide__bullet:hover, .glide__bullet:focus {
    border: 2px solid white;
    background-color: rgba(255, 255, 255, 0.5); }
  .glide__bullet--active {
    background-color: white; }

.glide--swipeable {
  cursor: grab;
  cursor: -webkit-grab; }

.glide--dragging {
  cursor: grabbing;
  cursor: -webkit-grabbing; }

/* fixes */
.glide__slide {
  /* Fix for flashing background image on slide */
  transform: translate3d(0, 0, 0); }

.glide__slides {
  -webkit-backface-visibility: visible;
          backface-visibility: visible; }

.glide__arrow {
  border: none;
  background: rgba(0, 0, 0, 0.3);
  color: white;
  font-size: 20px;
  padding: 50px 12px;
  border-radius: 0;
  box-shadow: none;
  text-shadow: none;
  font-weight: 600;
  font-size: 18px;
  opacity: 1;
  cursor: pointer;
  transition: opacity 150ms ease, border 300ms ease-in-out;
  line-height: 1;
  transition: 0.3s; }
  .glide__arrow:focus {
    outline: none; }
  .glide__arrow:hover {
    background: rgba(0, 0, 0, 0.8); }
  .glide__arrow--left {
    left: 30px; }
  .glide__arrow--right {
    right: 30px; }
  .glide__arrow--disabled {
    opacity: 0.33; }
  @media (max-width: 800px) {
    .glide__arrow {
      display: none !important; } }

.glide__arrow img {
  width: 25px; }

html {
  color: #2a2a2a;
  scroll-behavior: smooth; }

html,
body {
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  font-family: 'Open Sans'; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
