@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600);
#slider {
  position: relative;
  overflow: hidden;
  z-index: 0; }
  #slider a.control_prev,
  #slider a.control_next {
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    z-index: 999;
    display: block;
    padding: 4% 3%;
    width: auto;
    height: auto;
    color: #fff;
    text-decoration: none;
    font-weight: 600;
    font-size: 18px;
    opacity: 0.8;
    cursor: pointer; }
  #slider a.control_prev:hover,
  #slider a.control_next:hover {
    -webkit-transition: all 0.2s ease; }
  #slider a.control_prev {
    border-radius: 0 2px 2px 0; }
  #slider a.control_next {
    right: 0;
    border-radius: 2px 0 0 2px; }
  #slider ul {
    position: relative;
    margin: 0;
    padding: 0;
    height: 400px;
    list-style: none; }
    #slider ul li {
      position: relative;
      display: block;
      float: left;
      margin: 0;
      padding: 0;
      width: 100vw;
      height: 650px;
      background: #ccc; }
      #slider ul li .sliderContainer {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 243px;
        width: 661px;
        position: relative;
        top: 50%;
        transform: translate(0, -40%);
        left: 25vw;
        color: white; }
        #slider ul li .sliderContainer .sliderTitle {
          text-transform: uppercase;
          font-size: 45px;
          font-family: 'Montserrat', sans-serif;
          font-weight: 500; }
        #slider ul li .sliderContainer .sliderText {
          font-size: 20px;
          font-weight: 500;
          font-family: 'Montserrat', sans-serif; }

header {
  display: flex;
  margin-top: 32px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  align-items: center;
  z-index: 1; }
  header #rect {
    height: 62px;
    width: 20%;
    background-color: #AB0039; }
  header .logo {
    margin: 0 14px 0 25px;
    cursor: pointer; }
  header #rect2 {
    display: flex;
    align-items: center;
    background-color: #AB0039;
    height: 62px;
    width: 100%; }
    header #rect2 #nav_links {
      background-color: #AB0039;
      margin-left: 22%;
      margin-right: 22%;
      align-items: center;
      width: 60%;
      display: flex;
      justify-content: space-between;
      list-style: none; }
      header #rect2 #nav_links .link {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #AB0039;
        flex-grow: 1;
        cursor: pointer; }
        header #rect2 #nav_links .link .supButton {
          display: flex;
          justify-content: center;
          align-items: center;
          height: 62px;
          color: white;
          font-family: 'Montserrat', sans-serif;
          font-size: 14px;
          font-weight: 700;
          text-transform: uppercase;
          flex-grow: 1; }
      header #rect2 #nav_links .link:hover {
        background-image: linear-gradient(#AB0039, #6F1529); }

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

a {
  text-decoration: none; }

.sectionTitle {
  font-family: 'Montserrat', sans-serif;
  font-weight: 600;
  color: #3d3d3d;
  font-size: 34px;
  text-align: center; }

.baseButton {
  color: white;
  font-family: 'Montserrat', sans-serif;
  border-radius: 20px;
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;
  background-image: linear-gradient(#AB0039 1.9%, #6F1529 320.86%);
  width: 222px;
  height: 40px;
  border: none;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer; }

.baseButton:focus {
  outline: none; }

#whoWeAre {
  padding: 60px 0 60px 0; }
  #whoWeAre #aboutus {
    width: 805px;
    margin: 30px auto;
    line-height: 30px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
    color: #7D7D7D;
    font-size: 15px;
    text-align: justify; }
  #whoWeAre .baseButton {
    margin: auto;
    margin-top: 40px; }

#products {
  background-color: #e5e5e5;
  height: 50%;
  padding: 60px 0 60px 0; }
  #products #containerTable {
    display: flex;
    flex-direction: row;
    margin: 40px auto 13px;
    width: 680px;
    height: 40px; }
    #products #containerTable .containerOption {
      color: #696969;
      font-family: 'Montserrat', sans-serif;
      font-weight: 600;
      font-size: 17px;
      display: flex;
      justify-content: center;
      align-items: center;
      border-bottom: 2px solid #d5d5d5;
      width: calc(680px / 3);
      transition: 0.3s;
      cursor: pointer; }
    #products #containerTable .containerOption.active {
      color: #AB0039;
      border-bottom: 2px solid #AB0039;
      cursor: pointer; }
  #products #productContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 330px;
    width: 770px;
    -webkit-filter: drop-shadow(2px 2px 1px gray);
            filter: drop-shadow(2px 2px 1px gray);
    background-color: white;
    margin: 5px auto; }
    #products #productContainer #productInfo {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center; }
      #products #productContainer #productInfo #productDescription {
        color: #696969;
        font-family: 'Montserrat', sans-serif;
        font-weight: 400;
        font-size: 15px;
        line-height: 24px;
        margin-left: 30px;
        width: 490px;
        height: 190px;
        text-align: justify; }
    #products #productContainer .baseButton {
      margin-top: 35px; }

#getInTouch {
  padding: 60px 0 60px 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; }
  #getInTouch #contactForm {
    display: flex;
    flex-direction: column;
    font-family: 'Montserrat'; }
    #getInTouch #contactForm #contactText {
      font-weight: 400;
      font-size: 15px;
      text-align: center;
      margin: 40px auto 13px; }
    #getInTouch #contactForm #formName {
      margin-top: 20px;
      font-weight: 400;
      font-size: 14px; }
    #getInTouch #contactForm input {
      margin-top: 5px;
      width: 100%;
      font-size: 13px;
      font-weight: 400;
      height: 40px;
      width: 450px;
      border: 1px solid rgba(0, 0, 0, 0.4);
      box-sizing: border-box;
      border-radius: 10px;
      padding-left: 20px;
      padding-right: 20px;
      font-family: 'Montserrat';
      color: black; }
    #getInTouch #contactForm *:focus {
      outline: none; }
    #getInTouch #contactForm #formMessage {
      margin-top: 5px;
      width: 100%;
      font-size: 13px;
      height: 200px;
      width: 450px;
      border: 1px solid rgba(0, 0, 0, 0.4);
      box-sizing: border-box;
      border-radius: 10px;
      padding: 10px 20px 10px 20px;
      line-height: 20px;
      resize: vertical;
      font-family: 'Montserrat'; }
    #getInTouch #contactForm #disclaimer {
      text-align: right;
      font-size: 12px;
      margin-top: 7px; }
    #getInTouch #contactForm .baseButton {
      background-color: #AB0039;
      width: 100%;
      margin-top: 50px;
      align-self: center; }

#news {
  font-family: 'Montserrat';
  background-color: #e5e5e5;
  padding-top: 60px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; }
  #news #allPosts {
    margin: 24px 0 60px 0;
    font-size: 14px;
    color: #AB0039;
    font-weight: 500;
    text-align: center; }
    #news #allPosts a {
      display: block;
      color: inherit;
      text-decoration: none; }
  #news .containerNews {
    display: flex;
    width: 990px;
    height: 460px;
    justify-content: space-between; }
    #news .containerNews .row1 {
      flex-basis: 49%;
      display: flex;
      flex-direction: column; }
      #news .containerNews .row1 .winflectorPhoto {
        width: 100%;
        flex-basis: 50%; }
      #news .containerNews .row1 .first {
        flex-basis: 50%;
        padding-top: 25px; }
    #news .containerNews .row2 {
      flex-basis: 49%;
      display: flex;
      flex-direction: column;
      justify-content: space-between; }
      #news .containerNews .row2 .second {
        flex-basis: 49%; }
      #news .containerNews .row2 .third {
        flex-basis: 49%; }

.news {
  background-color: white;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  padding: 18px 50px 18px 50px;
  display: flex;
  flex-direction: column;
  transition: 0.2s; }
  .news span {
    font-size: 9px;
    color: #D0D0D0;
    font-weight: bold; }
  .news .newsTitle {
    font-size: 28px;
    color: #3d3d3d;
    padding-top: 10px;
    font-weight: bold; }
  .news .newsDesc {
    font-size: 15px;
    padding-top: 15px;
    padding-bottom: 55px;
    color: #3d3d3d;
    opacity: 0.67; }
  .news .newsButton {
    font-size: 12px;
    color: #AB0039;
    font-weight: bold;
    cursor: pointer;
    margin-right: 280px; }

#news::after {
  content: "";
  background-color: #d0d0d0;
  height: 1px;
  width: 100%;
  margin-top: 110px; }

/*
.news:hover {
    background-color: lightgray;
}
*/
footer {
  background-color: #E5E5E5;
  overflow: hidden; }
  footer .footerLinks {
    margin-left: 261px;
    color: #7b7b7b;
    display: flex;
    list-style: none; }
    footer .footerLinks li {
      padding-right: 30px;
      position: relative; }
    footer .footerLinks .withLine::after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: calc(100% - 15px);
      background-color: #7b7b7b;
      width: 1px;
      height: 23px; }

html {
  color: #2a2a2a;
  scroll-behavior: smooth; }

html,
body {
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  font-family: 'Open Sans'; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
